name: Continuous Delivery

on:
  workflow_call:
    inputs:
      timeoutMinutes:
        description: 'Amount of minutes, after that a build shall be aborted'
        required: false
        type: number
        default: 10
        
      releasePrefix:
        description: 'if needed, e.g. for a 4-digit version, this will be the prefix to the version calculated by the version action'
        required: false
        type: string
        default: ''        
        
      releaseBranches:        
        description: 'Comma separated list of branches that will generate the release tags.'
        required: false
        type: string
        default: '${{ github.event.repository.default_branch }}'
      fetchAllTags:
        required: false
        type: boolean
        default: false
      tagPrefix:
        required: false
        type: string
        default: 'v'        
        
      javaDistribution:
        description: 'The Java distribution to use. (defaults to eclipse "temurin")'
        required: false
        type: string
        default: 'temurin'
      # only one version at the time
      # for the syntax see https://github.com/actions/setup-java#supported-version-syntax
      jdkVersion:
        required: true
        type: string
        
      skipTests:
        required: false
        type: boolean
        default: false
      additionalMavenOpts:
        required: false
        type: string
        default: ''
        
      mavenDeploy:
        required: false
        type: boolean
        default: true
        
      sonarAnalysisEnabled:
        required: false
        type: boolean
        default: false

      # files to be attached to the github release - call syntax is like followed (pipe + newline for every file):
      # releaseFiles: |
      #   file1.txt
      #   file2.txt
      #   ....
      releaseFiles:
        required: false
        type: string
        default: ''

      mattermostChannel:
        required: true
        type: string
      notifyMattermost:
        required: false
        type: boolean
        default: true
        
    # for more info: https://docs.github.com/en/actions/using-workflows/reusing-workflows#using-outputs-from-a-reusable-workflow
    outputs:
      releaseVersion:
        description: "increased version, according to semver"
        value: ${{ jobs.build.outputs.releaseVersion }}


jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: ${{ inputs.timeoutMinutes}}
    env:
      # This will suppress any download for dependencies and plugins or upload messages which would clutter the console log.
      # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
      MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
      # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
      # when running from the command line.
      # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
      MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"
      REGISTRY_URL: ${{ secrets.LEVIGO_NEXUS_REGISTRY_RELEASES }}
    outputs:
      releaseVersion: ${{ inputs.releasePrefix }}${{ steps.semanticversion.outputs.new_version }}

    steps:
      - uses: actions/checkout@v3

      ## Set new version
      - name: Bump version and create tag
        id: semanticversion
        uses: mathieudutour/github-tag-action@v6.1
        with:
          release_branches: ${{ inputs.releaseBranches }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          fetch_all_tags: ${{ inputs.fetchAllTags }}
          tag_prefix: ${{ inputs.tagPrefix }}

      - name: Verify and print new build number
        run: |
          if echo '${{ steps.semanticversion.outputs.new_tag }}' |grep -Eq '^${{ inputs.tagPrefix }}[0-9]+[.][0-9]+[.][0-9]+$'; then
            echo Tag '${{ steps.semanticversion.outputs.new_tag }}', New version '${{ steps.semanticversion.outputs.new_version }}', Changelog '${{ steps.semanticversion.outputs.changelog }}'
          else
            echo 'unexpected tag format - aborting'
            exit -1
          fi

      ## Configure JDK
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: ${{ inputs.javaDistribution }}
          java-version: ${{ inputs.jdkVersion }}
          cache: 'maven'

      ## Configure maven settings
      - name: Prepare maven settings
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mkdir -p ~/.m2
          echo "<settings><servers><server><id>github</id><username>x-access-token</username><password>${GITHUB_TOKEN}</password></server></servers></settings>" > ~/.m2/settings.xml 

      - name: Set version
        id: version
        run: |
          echo Releasing as ${{ steps.semanticversion.outputs.new_version }}
          mvn $MAVEN_CLI_OPTS versions:set -DnewVersion=${{ steps.semanticversion.outputs.new_version }}

      ## ----------------------------------------
      ## A - Build and Test
      - name: Perform build - option with tests
        if: ${{ ! inputs.skipTests }}
        run: mvn $MAVEN_CLI_OPTS ${{ inputs.additionalMavenOpts }} package -Dmaven.test.failure.ignore=true -Djib.skip=true

      - name: Publish Test Report
        if: ${{ ! inputs.skipTests }}
        uses: scacap/action-surefire-report@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          fail_on_test_failures: true
          fail_if_no_tests: true

      ## B - Build without running Tests
      - name: Perform build - option without tests
        if: inputs.skipTests
        run: mvn $MAVEN_CLI_OPTS ${{ inputs.additionalMavenOpts }} verify -DskipTests
      ## ----------------------------------------
      - name: Deploy package
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPOSITORY_URL: ${{ secrets.REPOSITORY_URL }}
          REPOSITORY_USERID: ${{ secrets.REPOSITORY_USERID }}
          REPOSITORY_CREDENTIALS: ${{ secrets.REPOSITORY_CREDENTIALS }}
        run: |
          mkdir -p ~/.m2
          echo "<settings><servers><server><id>neverpile</id><username>${REPOSITORY_USERID}</username><password>${REPOSITORY_CREDENTIALS}</password></server></servers></settings>" > ~/.m2/settings.xml 
          mvn $MAVEN_CLI_OPTS deploy -Dmaven.test.skip.exec=true -Dmaven.install.skip=true -DaltDeploymentRepository=neverpile::default::${REPOSITORY_URL}

      - name: Perform sonar analysis
        if: inputs.sonarAnalysisEnabled
        continue-on-error: true
        run: |
          mvn $MAVEN_CLI_OPTS sonar:sonar -Dsonar.scm.disabled=true -Dsonar.qualitygate.wait=true -Dsonar.dependencyCheck.htmlReportPath=target/dependency-check-report.html

      - name: create release and upload release asset
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.semanticversion.outputs.new_tag }}
          name: ${{ steps.semanticversion.outputs.new_version }}
          draft: false
          prerelease: false
          files: |
            ${{ inputs.releaseFiles }}

      # we really need this if the release should trigger a second workflow. the step above will NOT trigger a second workflow.
      - name: dispatch release event
        run: |
          curl \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/dispatches \
            -d '{"event_type":"release_created","client_payload":{"version":"${{ steps.semanticversion.outputs.new_version }}"}}'      
            
      - name: Notify Mattermost
        uses: 8398a7/action-slack@v3
        with:
          username: GitHub
          icon_emoji: octocat
          channel: ${{ inputs.mattermostChannel }}
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref
          text: ${{ github.workflow }} ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: inputs.notifyMattermost && always()
name: Scan Repo (npm)

on:
  workflow_call:
    inputs:
      timeoutMinutes:
        required: false
        type: number
        default: 5
      branch:
        required: false
        type: string
        default: '${{ github.event.repository.default_branch }}'
      resultUploadName:
        required: false
        type: string
        default: 'CVE-scan-results'
      mattermostChannel:
        required: false
        type: string
        default: 'cve-scans'
      notifyMattermost:
        required: false
        type: boolean
        default: true
      nodeVersion:
        description: 'The Node version to use. (defaults to "18")'
        required: false
        type: string
        default: '18'
      npmRootDirectory:
        description: 'The directory with the root package.json. (defaults to project root)'
        required: false
        type: string
        default: '${{ github.workspace }}'
      trivyContinueOnError:
        description: 'Do not fail build if trivy scan finds vulnerabilities'
        required: false
        type: boolean
        default: false
      trivySeverities:
        description: 'Fail if any CVE of these severity levels are found (defaults to "CRITICAL,HIGH"; also available: "UNKNOWN,LOW,MEDIUM")'
        required: false
        type: string
        default: 'CRITICAL,HIGH'
      trivyVulnerabilityTypes:
        description: 'Check for these vulnerability type (defaults to "os,library")'
        required: false
        type: string
        default: 'os,library'
      trivyFormat:
        description: 'Output format of the trivy scan (defaults to "table"; also available: "json, sarif, github")'
        required: false
        type: string
        default: 'table'
      dtUpload:
        description: 'Upload SBOM to DependencyTrack'
        required: false
        type: boolean
        default: false
      dtProjectName:
        description: 'DependencyTrack project name (defaults to repository name)'
        required: false
        type: string
        default: '${{ github.event.repository.name }}'
      dtProjectVersion:
        description: 'DependencyTrack project version (defaults to branch name)'
        required: false
        type: string
        default: '${{ github.ref_name }}'
      dtSetParent:
        description: 'Whether to set a parent project. If enabled "dtProjectVersion" should be specified, too.'
        required: false
        type: boolean
        default: false
      dtParentName:
        description: 'DependencyTrack parent name (defaults to repository name)'
        required: false
        type: string
        default: '${{ github.event.repository.name }}'
      dtParentVersion:
        description: 'DependencyTrack parent version (defaults to default branch name)'
        required: false
        type: string
        default: '${{ github.event.repository.default_branch }}'

permissions:
  contents: write

env:
  # This will suppress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"

jobs:
  scan:
    runs-on: ubuntu-22.04
    timeout-minutes: ${{ inputs.timeoutMinutes}}
    env:
      REPO_NAME: ${{ github.repository }}
      TRIVY_RESULT_FILE: 'trivy-cyclonedx-sbom.txt'

    steps:
      - name: sbom-npm-create
        uses: .
        with:
          branch: ${{ inputs.branch }}
          nodeVersion: ${{ inputs.nodeVersion }}
          npmRootDirectory: ${{ inputs.npmRootDirectory }}

      - name: sbom-process
        uses: .
        with:
          branch: ${{ inputs.branch }}
          nodeVersion: ${{ inputs.nodeVersion }}
          npmRootDirectory: ${{ inputs.npmRootDirectory }}

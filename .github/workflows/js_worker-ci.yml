name: Continuous Integration

on:
  workflow_call:
    inputs:
      sonarAnalysisEnabled:
        required: true
        type: boolean
      skipTests:
        required: false
        type: boolean
        default: false
    secrets:
      repoUser:
        required: true
      repoPassword:
        required: true
      repoURL:
        required: true
      registryURL:
        required: true
      sonarToken:
        required: false
      sonarURL:
        required: false
      slackWebhookURL:
        required: false
      teamsWebhookURL:
        required: false

jobs:
  build:
    runs-on: ubuntu-20.04
    timeout-minutes: 5
    env:
      # This will suppress any download for dependencies and plugins or upload messages which would clutter the console log.
      # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
      MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
      # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
      # when running from the command line.
      # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
      MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'maven'

      - name: Prepare maven settings
        env:
          REGISTRY_URL: ${{ secrets.registryURL }}
          REPOSITORY_URL: ${{ secrets.repoURL }}
          REPOSITORY_USERID: ${{ secrets.repoUser }}
          REPOSITORY_CREDENTIALS: ${{ secrets.repoPassword }}
          SONAR_HOST_URL: ${{ secrets.sonarURL }}
          SONAR_LOGIN: ${{ secrets.sonarToken }}
        run: |
          mkdir -p ~/.m2
          envsubst < ./.github/settings.xml > ~/.m2/settings.xml

      ## Build and Test
      - name: Perform build
        if: ! ${{ inputs.skipTests }}
        run: mvn $MAVEN_CLI_OPTS verify -Dmaven.test.failure.ignore=true

      - name: Publish Test Report
        if: ! ${{ inputs.skipTests }}
        uses: scacap/action-surefire-report@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          fail_on_test_failures: true
          fail_if_no_tests: true

      ## Build without running Tests
      - name: Perform build
        if: ${{ inputs.skipTests }}
        run: mvn $MAVEN_CLI_OPTS verify -DskipTests

      ## Static code analysis with sonarqube
      - name: Perform sonar analysis
        if: inputs.sonarAnalysisEnabled
        run: mvn $MAVEN_CLI_OPTS sonar:sonar -Dsonar.scm.disabled=true -Dsonar.qualitygate.wait=true

      - name: Set up Env
        run: |
          echo "NOTIFY_SLACK=${{ secrets.slackWebhookURL }}" >> $GITHUB_ENV
          echo "NOTIFY_TEAMS=${{ secrets.teamsWebhookURL }}" >> $GITHUB_ENV

      - name: Notify slack
        uses: hennejg/slack-build-notifier@v1.1
        if: ${{ env.NOTIFY_SLACK }}
        with:
          username: GitHub
          icon_emoji: octocat
          channel: ${{ inputs.slackChannel }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.slackWebhookURL }}

      - name: Notify teams
        uses: toko-bifrost/ms-teams-deploy-card@master
        if: ${{ env.NOTIFY_TEAMS }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          webhook-uri: ${{ secrets.teamsWebhookURL }}
          show-on-start: false
          show-on-exit: true
          show-on-failure: true
          card-layout-exit: complete
          timezone: "Europe/Berlin"
          include-files: false

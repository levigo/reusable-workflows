name: Continuous Integration

on:
  workflow_call:
    inputs:
      sonarAnalysisEnabled:
        required: true
        type: boolean
      skipTests:
        required: false
        type: boolean
        default: false
      slackChannel:
        required: false
        type: string
        default: 'ci_qm_test'
      matrix:
        required: false
        type: string
        default: '{"jdk":[{"version": 11, "config": ""}]}'
      xvfb:
        required: false
        type: boolean
        default: false
      java-distribution:
        description: 'The Java distribution to use. (defaults to eclipse "temurin")'
        required: false
        type: string
        default: 'temurin'
      maven-repo:
        description: 'The target maven repository - either n2 or n3 (defaults to n3)'
        required: false
        type: string
        default: 'n3'
      maven-cache:
        description: 'Cache the local maven repository between builds.'
        required: false
        type: boolean
        default: true
      maven-cache-exclusion:
        description: 'Cache the local maven repository between builds.'
        required: false
        type: string
        default: ''
      maven-archive:
        description: 'In case of a cache-miss, download an archived local-maven-repo'
        required: false
        type: boolean
        default: false
      jiraProjectKey:
        description: 'The JIRA project key'
        required: true
        type: string
      gitMainBranch:
        description: 'Name of the main branch in git. Usually origin/main or origin/master. (default is origin/master)'
        required: false
        type: string
        default: 'origin/master'
      tagPrefix:
        description: 'Optional git tag prefix. (default is "v")'
        required: false
        type: string
        default: 'v'
      releaseBranches:
        description: 'Comma separated list of branches (bash reg exp accepted) that will generate the release tags. (default is "master")'
        required: false
        type: string
        default: 'master'
    secrets:
      token:
        required: true
      repoUser:
        required: true
      repoPassword:
        required: true
      repoURL:
        required: true
      registryURL:
        required: true
      sonarToken:
        required: false
      sonarURL:
        required: false
      slackWebhookURL:
        required: false
      teamsWebhookURL:
        required: false
      repoReleaseUser:
        required: false
      repoReleasePassword:
        required: false

env:
  # This will suppress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"

jobs:
  build:
    runs-on: ubuntu-20.04
    timeout-minutes: 25

    strategy:
      fail-fast: false
      matrix: ${{fromJSON(inputs.matrix)}}

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/checkout@v2
        with:
          repository: levigo/github-actions
          ref: 502aa3f9b51cb04b48be498dc7b1913d59b7b47f
          path: actions
          token: ${{ secrets.token }}

      - uses: ./actions/setup-maven-java
        with:
          java-version: ${{ matrix.jdk.version }}
          java-distribution: ${{ inputs.java-distribution }}
          maven-repo: ${{ inputs.maven-repo }}
          maven-cache: ${{ inputs.maven-cache }}
          maven-cache-exclusion: ${{ inputs.maven-cache-exclusion }}
          maven-archive: ${{ inputs.maven-cache }}
          repoUser: ${{ secrets.repoUser }}
          repoPassword: ${{ secrets.repoPassword }}
          repoURL: ${{ secrets.repoURL }}
          registryURL: ${{ secrets.registryURL }}
          sonarToken: ${{ secrets.sonarToken }}
          sonarURL: ${{ secrets.sonarURL }}
          repoReleaseUser: ${{ secrets.repoReleaseUser }}
          repoReleasePassword: ${{ secrets.repoReleasePassword }}
          githubToken: ${{ secrets.GITHUB_TOKEN }}

      - uses: ./actions/maven-build
        with:
          mavenCLIOptions: ${{ matrix.jdk.config }} ${{ env.MAVEN_CLI_OPTS }}
          xvfb: ${{ inputs.xvfb }}
          skipTests: ${{ inputs.skipTests }}
          java-version: ${{ matrix.jdk.version }}
          githubToken: ${{ secrets.GITHUB_TOKEN }}

      - uses: ./actions/versioning
        with:
          tagPrefix: ${{ inputs.tagPrefix }}
          releaseBranches:  ${{ inputs.releaseBranches }}
          githubToken:  ${{ secrets.GITHUB_TOKEN }}

      - name: notify JIRA
        uses: ./.github/actions/composite-jira
        with:
          jiraProjectKey: ${{ inputs.jiraProjectKey }}
          mainBranch: ${{ inputs.gitMainBranch }}
          releaseVersion: 0.1.2
          jiraUser: ${{ secrets.JIRA_USER }}
          jiraPassword: ${{ secrets.JIRA_PASSWORD }}
          jiraURL: ${{ secrets.JIRA_BASE_URL }}
          repoUser: ${{ secrets.LEVIGO_NEXUS_USERNAME }}
          repoPassword: ${{ secrets.LEVIGO_NEXUS_PASSWORD }}
          registryURL: ${{ secrets.LEVIGO_NEXUS_REGISTRY_RELEASES }}
          token: ${{ secrets.REPO_PTA }}

      - uses: ./actions/notify-developers
        with:
          teamsWebhookURL: ${{ secrets.teamsWebhookURL }}
          slackWebhookURL: ${{ secrets.slackWebhookURL }}
          slackChannel: ${{ inputs.slackChannel }}
          slackMessage: Performed mvn build with JDK ${{ matrix.jdk.version }}
          githubToken: ${{ secrets.GITHUB_TOKEN }}
        if: always()
